var searchIndex = JSON.parse('{\
"webservice":{"doc":"","i":[[3,"DbConn","webservice","The request guard type.",null,null],[12,"0","","",0,null],[3,"DbConnPool","","The pool type.",null,null],[12,"0","","",1,null],[5,"main","","",null,[[]]],[0,"cors","","",null,null],[3,"CorsFairing","webservice::cors","",null,null],[0,"models","webservice","",null,null],[3,"Result","webservice::models","Description of a result",null,null],[12,"id","","",2,null],[12,"path","","",2,null],[3,"AddResultRequest","","Description of a request to add a result to the database",null,null],[12,"submission_id","","",3,null],[12,"result_url","","",3,null],[5,"_impl_identifiable_for_result","","",null,[[]]],[5,"_impl_queryable_for_result","","",null,[[]]],[5,"_impl_insertable_for_result","","",null,[[]]],[0,"routes","webservice","",null,null],[5,"home","webservice::routes","Route used to check if the api is running",null,[[]]],[5,"rocket_route_fn_home","","Rocket code generated wrapping route function.",null,[[["request",3],["data",3]],["outcome",6]]],[5,"list_results","","Route that lists the results available",null,[[["dbconn",3]],[["vec",3],["json",3]]]],[5,"rocket_route_fn_list_results","","Rocket code generated wrapping route function.",null,[[["request",3],["data",3]],["outcome",6]]],[5,"add_result","","Route to add a new result",null,[[["json",3],["dbconn",3],["addresultrequest",3]],["accepted",3]]],[5,"rocket_route_fn_add_result","","Rocket code generated wrapping route function.",null,[[["request",3],["data",3]],["outcome",6]]],[7,"static_rocket_route_info_for_home","","Rocket code generated static route info.",null,null],[7,"static_rocket_route_info_for_list_results","","Rocket code generated static route info.",null,null],[7,"static_rocket_route_info_for_add_result","","Rocket code generated static route info.",null,null],[0,"schema","webservice","",null,null],[0,"results","webservice::schema","",null,null],[3,"table","webservice::schema::results","The actual table struct",null,null],[5,"_impl_query_id_for_table","","",null,[[]]],[0,"dsl","","Re-exports all of the columns of this table, as well as…",null,null],[0,"columns","","Contains all of the columns of this table",null,null],[3,"star","webservice::schema::results::columns","Represents `table_name.*`, which is sometimes needed for…",null,null],[3,"id","","",null,null],[3,"path","","",null,null],[5,"_impl_query_id_for_id","","",null,[[]]],[5,"_impl_query_id_for_path","","",null,[[]]],[6,"SqlType","webservice::schema::results","The SQL type of all of the columns on this table",null,null],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",null,null],[17,"all_columns","","A tuple of all of the columns on this table",null,null],[11,"star","","Represents `table_name.*`, which is sometimes necessary…",4,[[],["star",3]]],[11,"fairing","webservice","Returns a fairing that initializes the associated database…",0,[[]]],[11,"get_one","","Retrieves a connection of type `Self` from the `rocket`…",0,[[["rocket",3]],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_collection","","",0,[[],["smallvec",3]]],[11,"mapped","","",0,[[],["smallvec",3]]],[11,"as_result","","",0,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_collection","","",1,[[],["smallvec",3]]],[11,"mapped","","",1,[[],["smallvec",3]]],[11,"as_result","","",1,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",1,[[]]],[11,"from","webservice::cors","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_collection","","",5,[[],["smallvec",3]]],[11,"mapped","","",5,[[],["smallvec",3]]],[11,"as_result","","",5,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",5,[[]]],[11,"from","webservice::models","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_collection","","",2,[[],["smallvec",3]]],[11,"mapped","","",2,[[],["smallvec",3]]],[11,"as_result","","",2,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_collection","","",3,[[],["smallvec",3]]],[11,"mapped","","",3,[[],["smallvec",3]]],[11,"as_result","","",3,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",3,[[]]],[11,"from","webservice::schema::results","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"join_target","","",4,[[["onclausewrapper",3]]]],[11,"for_update","","",4,[[]]],[11,"into_collection","","",4,[[],["smallvec",3]]],[11,"mapped","","",4,[[],["smallvec",3]]],[11,"as_result","","",4,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",4,[[]]],[11,"from","webservice::schema::results::columns","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_collection","","",6,[[],["smallvec",3]]],[11,"mapped","","",6,[[],["smallvec",3]]],[11,"as_result","","",6,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"execute","","",7,[[],[["result",4],["error",4]]]],[11,"into_collection","","",7,[[],["smallvec",3]]],[11,"mapped","","",7,[[],["smallvec",3]]],[11,"as_result","","",7,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"execute","","",8,[[],[["result",4],["error",4]]]],[11,"into_collection","","",8,[[],["smallvec",3]]],[11,"mapped","","",8,[[],["smallvec",3]]],[11,"as_result","","",8,[[],[["result",4],["parseerr",3]]]],[11,"vzip","","",8,[[]]],[11,"clone","webservice::schema::results","",4,[[],["table",3]]],[11,"clone","webservice::schema::results::columns","",6,[[],["star",3]]],[11,"clone","","",7,[[],["id",3]]],[11,"clone","","",8,[[],["path",3]]],[11,"default","","",7,[[],["id",3]]],[11,"default","","",8,[[],["path",3]]],[11,"deref","webservice","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"fmt","webservice::schema::results","",4,[[["formatter",3]],["result",6]]],[11,"fmt","webservice::schema::results::columns","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"div","","",7,[[]]],[11,"sub","","",7,[[]]],[11,"add","","",7,[[]]],[11,"mul","","",7,[[]]],[11,"serialize","webservice::models","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"table","","",2,[[]]],[11,"table","webservice::schema::results","",4,[[]]],[11,"build","webservice::models","",2,[[]]],[11,"eq_all","webservice::schema::results::columns","",7,[[]]],[11,"eq_all","","",8,[[]]],[11,"values","webservice::models","",2,[[]]],[11,"values","webservice::schema::results","",4,[[]]],[11,"join_target","","",4,[[["join",3]]]],[11,"join_target","","",4,[[["joinon",3]]]],[11,"join_target","","",4,[[["selectstatement",3]]]],[11,"join_target","","",4,[[["boxedselectstatement",3]]]],[11,"from_clause","","",4,[[]]],[11,"default_selection","","",4,[[]]],[11,"primary_key","","",4,[[]]],[11,"all_columns","","",4,[[]]],[11,"into_update_target","","",4,[[],["updatetarget",3]]],[11,"walk_ast","webservice::schema::results::columns","",6,[[["astpass",3]],["queryresult",6]]],[11,"walk_ast","","",7,[[["astpass",3]],["queryresult",6]]],[11,"walk_ast","","",8,[[["astpass",3]],["queryresult",6]]],[11,"as_query","webservice::schema::results","",4,[[]]],[11,"from_request","webservice","",0,[[["request",3]],["outcome",6]]],[11,"on_response","webservice::cors","",5,[[["response",3],["request",3]]]],[11,"info","","",5,[[],["info",3]]]],"p":[[3,"DbConn"],[3,"DbConnPool"],[3,"Result"],[3,"AddResultRequest"],[3,"table"],[3,"CorsFairing"],[3,"star"],[3,"id"],[3,"path"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);